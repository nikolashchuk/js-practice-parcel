{"mappings":"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","sources":["src/js/refs.js","src/js/unsplashAPI.js","<<jsx-config-pragma.js>>","src/js/infinite-scroll.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  backdroap: document.querySelector('[data-load]'),\n  spinner: document.querySelector('.js-spinner'),\n};\n","// https://api.unsplash.com/search/photos?client_id=LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc&page=1&query=office\n\nexport class UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #KEY = 'LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc';\n  #query = '';\n  #page = 1;\n  #per_page = 15;\n  #totalPhotos = 0;\n\n  getPhotos() {\n    return fetch(\n      `${this.#BASE_URL}?client_id=${this.#KEY}&page=${this.#page}&query=${\n        this.#query\n      }&per_page=${this.#per_page}&color=black_and_white&orientation=landscape`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n  }\n\n  setTotalPhotos(totalPhotos) {\n    this.#totalPhotos = totalPhotos;\n  }\n\n  hasMorePhotos() {\n    return this.#page < Math.ceil(this.#totalPhotos / this.#per_page);\n  }\n\n  incrementPage() {\n    this.#page += 1;\n  }\n\n  resetPage() {\n    this.#page = 1;\n  }\n\n  get query() {\n    return this.#query;\n  }\n\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n}\n",null,"// https://api.unsplash.com/search/photos?page=1&query=office\nimport { refs } from './refs';\nimport { UnsplashAPI } from './unsplashAPI';\nimport { createGalleryCards } from './markup';\nimport { spinnerPlay, spinnerStop } from './spinner';\n//\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\nconst callback = function (entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      console.log(entry.target);\n      observer.unobserve(entry.target);\n      unsplashAPI.incrementPage();\n      spinnerPlay();\n      unsplashAPI\n        .getPhotos()\n        .then(({ results }) => {\n          const markup = createGalleryCards(results);\n          refs.list.insertAdjacentHTML('beforeend', markup);\n          const hasMore = unsplashAPI.hasMorePhotos();\n\n          if (hasMore) {\n            const item = document.querySelector('.gallery__item:last-child');\n            observer.observe(item);\n          }\n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n          spinnerStop();\n        });\n    }\n  });\n};\nconst observer = new IntersectionObserver(callback, options);\n\nrefs.form.addEventListener('submit', onSearch);\n\nconst unsplashAPI = new UnsplashAPI();\n\nfunction onSearch(evt) {\n  evt.preventDefault();\n  const value = evt.currentTarget.elements.query.value;\n  console.log(value);\n\n  if (!value) {\n    return alert('input any data');\n  }\n\n  refs.list.innerHTML = '';\n  unsplashAPI.resetPage();\n  unsplashAPI.query = value;\n  spinnerPlay();\n\n  unsplashAPI\n    .getPhotos()\n    .then(({ results, total }) => {\n      if (results.length === 0) {\n        return alert('enter normal value');\n      }\n      const markup = createGalleryCards(results);\n      refs.list.insertAdjacentHTML('beforeend', markup);\n      unsplashAPI.setTotalPhotos(total);\n      const hasMore = unsplashAPI.hasMorePhotos();\n\n      if (hasMore) {\n        const item = document.querySelector('.gallery__item:last-child');\n        observer.observe(item);\n      }\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      spinnerStop();\n    });\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","list","backdroap","spinner","$8MBJY","parcelRequire","$42d43a98a07d40d2$var$_BASE_URL","WeakMap","$42d43a98a07d40d2$var$_KEY","$42d43a98a07d40d2$var$_query","$42d43a98a07d40d2$var$_page","$42d43a98a07d40d2$var$_per_page","$42d43a98a07d40d2$var$_totalPhotos","$42d43a98a07d40d2$export$85d6d7b537f17cf1","UnsplashAPI","$parcel$interopDefault","$8MQK7","this","key","fetch","concat","$4KMWL","then","response","ok","Error","statusText","json","totalPhotos","Math","ceil","newQuery","$93b54f497d416715$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","console","log","target","unobserve","$93b54f497d416715$var$unsplashAPI","incrementPage","$j1lrD","spinnerPlay","getPhotos","param","results","markup","$1KhuP","createGalleryCards","insertAdjacentHTML","hasMorePhotos","item","observe","catch","error","finally","spinnerStop","root","rootMargin","threshold","addEventListener","evt","preventDefault","value","currentTarget","elements","query","alert","innerHTML","resetPage","total","length","setTotalPhotos","err"],"version":3,"file":"infifnite-scroll.10ee0868.js.map"}