{"mappings":"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","sources":["src/js/refs.js","src/js/unsplashAPI.js","src/js/infinite-scroll.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  backdroap: document.querySelector('[data-load]'),\n  spinner: document.querySelector('.js-spinner'),\n};\n","// https://api.unsplash.com/search/photos?client_id=LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc&page=1&query=office\n\nexport class UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #KEY = 'LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc';\n  #query = '';\n  #page = 1;\n  #per_page = 15;\n  #totalPhotos = 0;\n\n  getPhotos() {\n    return fetch(\n      `${this.#BASE_URL}?client_id=${this.#KEY}&page=${this.#page}&query=${\n        this.#query\n      }&per_page=${this.#per_page}&color=black_and_white&orientation=landscape`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n  }\n\n  setTotalPhotos(totalPhotos) {\n    this.#totalPhotos = totalPhotos;\n  }\n\n  hasMorePhotos() {\n    return this.#page < Math.ceil(this.#totalPhotos / this.#per_page);\n  }\n\n  incrementPage() {\n    this.#page += 1;\n  }\n\n  resetPage() {\n    this.#page = 1;\n  }\n\n  get query() {\n    return this.#query;\n  }\n\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n}\n","// https://api.unsplash.com/search/photos?page=1&query=office\nimport { refs } from './refs';\nimport { UnsplashAPI } from './unsplashAPI';\nimport { createGalleryCards } from './markup';\nimport { spinnerPlay, spinnerStop } from './spinner';\n//\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\nconst callback = function (entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      console.log(entry.target);\n      observer.unobserve(entry.target);\n      unsplashAPI.incrementPage();\n      spinnerPlay();\n      unsplashAPI\n        .getPhotos()\n        .then(({ results }) => {\n          const markup = createGalleryCards(results);\n          refs.list.insertAdjacentHTML('beforeend', markup);\n          const hasMore = unsplashAPI.hasMorePhotos();\n\n          if (hasMore) {\n            const item = document.querySelector('.gallery__item:last-child');\n            observer.observe(item);\n          }\n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n          spinnerStop();\n        });\n    }\n  });\n};\nconst observer = new IntersectionObserver(callback, options);\n\nrefs.form.addEventListener('submit', onSearch);\n\nconst unsplashAPI = new UnsplashAPI();\n\nfunction onSearch(evt) {\n  evt.preventDefault();\n  const value = evt.currentTarget.elements.query.value;\n  console.log(value);\n\n  if (!value) {\n    return alert('input any data');\n  }\n\n  refs.list.innerHTML = '';\n  unsplashAPI.resetPage();\n  unsplashAPI.query = value;\n  spinnerPlay();\n\n  unsplashAPI\n    .getPhotos()\n    .then(({ results, total }) => {\n      if (results.length === 0) {\n        return alert('enter normal value');\n      }\n      const markup = createGalleryCards(results);\n      refs.list.insertAdjacentHTML('beforeend', markup);\n      unsplashAPI.setTotalPhotos(total);\n      const hasMore = unsplashAPI.hasMorePhotos();\n\n      if (hasMore) {\n        const item = document.querySelector('.gallery__item:last-child');\n        observer.observe(item);\n      }\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      spinnerStop();\n    });\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","backdroap","spinner","$jkMrE","parcelRequire","$e625a6b607d3167a$var$_BASE_URL","WeakMap","$e625a6b607d3167a$var$_KEY","$e625a6b607d3167a$var$_query","$e625a6b607d3167a$var$_page","$e625a6b607d3167a$var$_per_page","$e625a6b607d3167a$var$_totalPhotos","$7f13665ecc617d63$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","console","log","target","unobserve","$7f13665ecc617d63$var$unsplashAPI","incrementPage","$04jNI","spinnerPlay","getPhotos","then","results","markup","$3huUq","createGalleryCards","insertAdjacentHTML","hasMorePhotos","item","observe","catch","error","finally","spinnerStop","root","rootMargin","threshold","addEventListener","evt","preventDefault","value","currentTarget","elements","query","alert","innerHTML","resetPage","total","length","setTotalPhotos","err","fetch","$parcel$interopDefault","this","response","ok","Error","statusText","json","totalPhotos","Math","ceil","newQuery","$g6yUq"],"version":3,"file":"infifnite-scroll.cb5dbac6.js.map"}